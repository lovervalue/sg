<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns="http://www.springframework.org/schema/beans"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  


                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<description>spring和MyBatis完美整合，不需要mybatis的配置映射文件</description>
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mappers/*/*.xml" />
	</bean>

	<!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">-->
		<!--<description>DAO接口所在包名，Spring会自动查找其下的类</description>-->
		<!--<property name="basePackage" value="com.sofn.dao.*" />-->
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />-->
	<!--</bean>-->
	<!-- 扫描basePackage下所有以@MyBatisDao注解的接口 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.sofn" />
		<property name="annotationClass"
				  value="com.sofn.core.annotation.MyBatisDao" />
	</bean>

	<!-- 事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
	<!--&lt;!&ndash; 配置事务异常封装 &ndash;&gt;-->
	<!--<bean id="persistenceExceptionTranslationPostProcessor"-->
		  <!--class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />-->
	<!--&lt;!&ndash;  声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager &ndash;&gt;-->
	<!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
		<!--<tx:attributes>-->
			<!--<tx:method name="add*" propagation="REQUIRED" />-->
			<!--<tx:method name="get*" propagation="REQUIRED" />-->
			<!--<tx:method name="update*" propagation="REQUIRED"/>-->
			<!--<tx:method name="*" read-only="true" />-->
		<!--</tx:attributes>-->
	<!--</tx:advice>-->
	<!--<aop:config expose-proxy="true">-->
		<!--&lt;!&ndash; 只对业务逻辑层实施事务 &ndash;&gt;-->
		<!--<aop:pointcut id="txPointcut" expression="execution(* com.sofn.provider..*.*(..))" />-->
		<!--&lt;!&ndash; Advisor定义，切入点和通知分别为txPointcut、txAdvice &ndash;&gt;-->
		<!--<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>-->
	<!--</aop:config>-->

	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
</beans>