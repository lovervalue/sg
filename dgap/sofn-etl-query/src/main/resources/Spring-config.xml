<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!--<context:property-placeholder ignore-unresolvable="true" location="${system.config.path}" />-->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:system.properties" />
	<!-- 引入属性配置文件,覆盖默认配置文件 -->
	<bean class="com.sofn.core.util.PropertiesUtil">
		<!--<property name="ignoreUnresolvablePlaceholders" value="true" />-->
		<!--<property name="decryptPropertyValue" value="${decrypt.propvalue}" />-->

		<property name="locations">
			<list>
				<!--<value>${sys.jdbc.config.path}</value>-->
				<!--<value>${system.config.path}</value>-->
				<value>classpath:system.properties</value>
				<!--<value>classpath:pre-jdbc.properties</value>-->
			</list>
		</property>

	</bean>

	<!-- 扫描注解 -->
	<context:component-scan base-package="com.sofn.etlquery">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.cache.annotation.EnableCaching" />
	</context:component-scan>


	<bean id="dbPasswordCallback" class="com.sofn.core.config.DBPasswordCallback">
		<description>数据库连接回调密码解密</description>
	</bean>
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter" lazy-init="true">
		<description>状态过滤器</description>
		<property name="slowSqlMillis" value="3000" />
		<property name="logSlowSql" value="true" />
		<property name="mergeSql" value="true" />
	</bean>
	<bean id="log-filter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="false" />
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>


	<bean id="etlDwDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close" init-method="init" lazy-init="true">
		<description>只读数据库连接</description>
		<property name="driverClassName" value="${db.dw.driver}" />
		<property name="url" value="${db.dw.url}" />
		<property name="username" value="${db.dw.username}" />
		<property name="password" value="${db.dw.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${db.initialSize}" />
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${db.maxActive}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${db.minIdle}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${db.maxWait}" />
		<!-- -->
		<property name="defaultReadOnly" value="true" />
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
				<ref bean="log-filter"/>
			</list>
		</property>
		<property name="filters" value="${druid.filters}" />
		<property name="connectionProperties" value="password=${db.dw.password}" />
		<property name="passwordCallback" ref="dbPasswordCallback" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
		<property name="timeBetweenLogStatsMillis" value="60000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.minEvictableIdleTimeMillis}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}" />
	</bean>



</beans>