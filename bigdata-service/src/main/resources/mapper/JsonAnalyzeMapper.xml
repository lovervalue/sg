<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sofn.bigdata.mapper.JsonAnalyzeMapper" >
    <resultMap id="JsonAnalyzeMap" type="com.sofn.bigdata.model.JsonAnalyze">
        <id column="ID" jdbcType="VARCHAR" property="id" />
        <result column="FILE_NAME" jdbcType="VARCHAR" property="fileName" />
        <result column="FILE_ALIAS" jdbcType="VARCHAR" property="fileAlias" />
        <result column="FILE_SOURCE" jdbcType="VARCHAR" property="fileSource" />
        <result column="OPERATOR" jdbcType="VARCHAR" property="operator" />
        <result column="OPERAT_DATE" jdbcType="TIMESTAMP" property="operatDate" />
        <result column="DEL_FLAG" jdbcType="VARCHAR" property="delFlag" />
        <result column="CREATE_USER_ID" jdbcType="VARCHAR" property="createUserId" />
        <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
        <result column="UPDATE_USER_ID" jdbcType="VARCHAR" property="updateUserId" />
        <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>
    <insert id="saveJsonAnalyze" parameterType="java.util.HashMap">
            insert into json_analyze (
                ID,
                FILE_NAME,
                FILE_ALIAS,
                FILE_SOURCE,
                OPERATOR,
                OPERAT_DATE,
                DEL_FLAG,
                CREATE_USER_ID,
                CREATE_TIME,
                UPDATE_USER_ID,
                UPDATE_TIME
            )
            values
                (
                    #{id,jdbcType=VARCHAR},
                    #{fileName,jdbcType=VARCHAR},
                    #{fileAlias,jdbcType=VARCHAR},
                    #{fileSource,jdbcType=VARCHAR},
                    #{operator,jdbcType=VARCHAR},
                    #{operatDate,jdbcType=TIMESTAMP},
                    #{delFlag,jdbcType=VARCHAR},
                    #{createUserId,jdbcType=VARCHAR},
                    #{createTime,jdbcType=TIMESTAMP},
                    #{updateUserId,jdbcType=VARCHAR},
                    #{updateTime,jdbcType=TIMESTAMP}
                )
    </insert>
    <select id="getJsonAnalyzeList" resultMap="JsonAnalyzeMap">
        select
            FILE_NAME,
            FILE_ALIAS,
            FILE_SOURCE,
            OPERATOR,
            OPERAT_DATE,
            CREATE_USER_ID,
            CREATE_TIME,
            UPDATE_USER_ID,
            UPDATE_TIME
        from
            json_analyze
        where
            DEL_FLAG = 'N'
        <if test="businame != null and businame != ''">
            and BUSI_NAME = #{businame}
        </if>
    </select>
    <update id="updateJsonAnalyze" parameterType="java.util.HashMap">
            update json_analyze set
                ID = #{id,jdbcType=VARCHAR},
                FILE_NAME = #{fileName,jdbcType=VARCHAR},
                FILE_ALIAS = #{fileAlias,jdbcType=VARCHAR},
                FILE_SOURCE = #{fileSource,jdbcType=VARCHAR},
                OPERATOR = #{operator,jdbcType=VARCHAR},
                OPERAT_DATE = #{operatDate,jdbcType=TIMESTAMP},
                DEL_FLAG = #{delFlag,jdbcType=VARCHAR},
                CREATE_USER_ID = #{createUserId,jdbcType=VARCHAR},
                CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
                UPDATE_USER_ID = #{updateUserId,jdbcType=VARCHAR},
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
            where
                ID = #{id}
    </update>
    <update id="deleteJsonAnalyze" parameterType="java.util.HashMap">
            update json_analyze set
                DEL_FLAG = 'Y'
            where
                ID = #{id}
    </update>
</mapper>